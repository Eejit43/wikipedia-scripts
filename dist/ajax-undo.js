// <nowiki>
// Note: This script was compiled and minified from TypeScript. For a more readable version, see https://github.com/Eejit43/wikipedia-scripts/blob/main/scripts/ajax-undo.ts

"use strict";(()=>{var p=`#ajax-undo-loading{display:none;vertical-align:text-bottom;height:1.3em;overflow:hidden;line-height:1.5em}#ajax-undo-loading:after{display:inline-table;animation:ajax-undo-loading .8s steps(10) infinite;content:"\\280b\\a\\2819\\a\\2839\\a\\2838\\a\\283c\\a\\2834\\a\\2826\\a\\2827\\a\\2807\\a\\280f";color:gray;text-align:left;white-space:pre}#ajax-undo-loading:not(.is-diff){margin:-.3em 3px 0}#ajax-undo-loading.is-diff{height:1.55em}#ajax-undo-loading.is-minerva:not(.is-diff){float:right;margin-top:0}#ajax-undo-loading.is-minerva.is-diff{margin:-.2em 3px}@keyframes ajax-undo-loading{to{transform:translateY(-15em)}}#ajax-undo-reason{display:none;margin-left:3px}#ajax-undo-reason.is-minerva{border:revert;background:revert;padding:revert}#ajax-undo-reason.is-minerva:not(.is-diff){float:right;height:26px}
`;mw.loader.using(["mediawiki.util"],()=>{let n=mw.config.get("wgDiffOldId");if(mw.config.get("wgAction")!=="history"&&!n)return;mw.util.addCSS(p);let a=mw.config.get("skin")==="minerva",d={awaitingClick:0,awaitingConfirmation:1,awaitingReload:2};for(let o of document.querySelectorAll(".mw-history-undo, .mw-diff-undo")){let m=o.querySelector("a");if(!m?.href){mw.notify("Could not find undo link!",{type:"error"});continue}let f=new URL(m.href),i=document.createElement("span"),s=d.awaitingClick,t=document.createElement("a");t.textContent="ajax undo",t.href=f.href,a&&!n&&(t.style.marginLeft="1em"),t.addEventListener("click",async c=>{if(c.preventDefault(),s===d.awaitingClick)s=d.awaitingConfirmation,e.style.display="inline",e.focus(),t.textContent="confirm ajax undo";else if(s===d.awaitingConfirmation){s=d.awaitingReload,r.style.display="inline-block",t.style.color="gray",e.disabled=!0,a&&t.append(r);let u=f.searchParams.get("undo"),g=f.searchParams.get("undoafter");if(!u||!g){mw.notify("Could not find undo parameters in URL!",{type:"error"});return}let l=o.closest(n?"td":"li")?.querySelector(".mw-userlink bdi")?.textContent;if(!l){mw.notify("Could not find revision user!",{type:"error"});return}if(!await new mw.Api().postWithEditToken({action:"edit",title:mw.config.get("wgPageName"),undo:u,undoafter:g,summary:`Undid revision ${u} by [[Special:Contributions/${l}|${l}]] ([[User talk:${l}|talk]])${e.value?`: ${e.value}`:""}`}).catch((w,y)=>(mw.notify(`Error undoing revision: ${y?.error.code??"Unknown error"} (${w})`,{type:"error"}),setTimeout(()=>{window.location.reload()},2e3),!1)))return;mw.notify("Revision successfully undone, reloading...",{type:"success"}),window.location.reload()}}),n&&i.append(document.createTextNode("(")),i.append(t);let r=document.createElement("span");r.id="ajax-undo-loading",n&&r.classList.add("is-diff"),a&&r.classList.add("is-minerva"),a||i.append(r);let e=document.createElement("input");e.type="text",e.id="ajax-undo-reason",n&&e.classList.add("is-diff"),a&&e.classList.add("is-minerva"),e.placeholder="Insert reason here...",e.addEventListener("keydown",c=>{c.key==="Enter"&&t.click()}),a&&!n?i.prepend(e):i.append(e),n&&i.append(document.createTextNode(")")),n?(o.after(i),o.after(document.createTextNode(" "))):a?o.parentElement?.before(i):o.parentElement?.after(i)}});})();

// </nowiki>
//# sourceMappingURL=data:application/json;base64,
