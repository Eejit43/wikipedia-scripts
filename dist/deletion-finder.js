// <pre>
// Note: This script was compiled and minified from TypeScript. For a more readable version, see https://github.com/Eejit43/wikipedia-scripts/blob/main/scripts/deletion-finder.ts

"use strict";(()=>{var n=`.deletion-finder-link{display:inline-block;margin-left:5px;font-size:12px}.deletion-finder-link:before{display:inline-block;transform:translateY(2px);margin-right:3px}#deletion-finder-previously-deleted{color:#d33}#deletion-finder-previously-deleted:before{content:url("data:image/svg+xml,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%2212%22 height=%2212%22 fill=%22%23dd3333%22 viewBox=%220 0 20 20%22%3E%3Ctitle%3E trash %3C/title%3E%3Cpath d=%22M17 2h-3.5l-1-1h-5l-1 1H3v2h14zM4 17a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V5H4z%22/%3E%3C/svg%3E")}#deletion-finder-previous-afd{color:#36c}#deletion-finder-previous-afd:before{content:url("data:image/svg+xml,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%2215%22 height=%2215%22 fill=%22%233366cc%22 viewBox=%220 0 20 20%22%3E%3Ctitle%3E info %3C/title%3E%3Cpath d=%22M4 10a6 6 0 1 0 12 0 6 6 0 0 0-12 0m6-8a8 8 0 1 1 0 16 8 8 0 0 1 0-16m1 7v5H9V9zm0-1V6H9v2z%22/%3E%3C/svg%3E")}
`;var i=new mw.Api;mw.loader.using(["mediawiki.util"],async()=>{if(mw.config.get("wgNamespaceNumber")!==0||mw.config.get("wgAction")!=="view"||mw.config.get("wgPageName")==="Main_Page")return;mw.util.addCSS(n);let t=document.querySelector("#firstHeading");if(!t)return mw.notify("deletion-finder: Could not find title element!",{type:"error"});if((await i.get({action:"query",leaction:"delete/delete",lelimit:1,letitle:mw.config.get("wgPageName"),list:"logevents"})).query.logevents.length>0){let e=document.createElement("a");e.id="deletion-finder-previously-deleted",e.classList.add("deletion-finder-link"),e.href=mw.util.getUrl("Special:Log/delete",{page:mw.config.get("wgPageName").replaceAll("_"," "),subtype:"delete"}),e.target="_blank",e.textContent="Previously deleted",t.append(e)}if(!(await i.get({action:"query",formatversion:"2",titles:`Wikipedia:Articles_for_deletion/${mw.config.get("wgPageName")}`})).query.pages[0].missing){let e=document.createElement("a");e.id="deletion-finder-previous-afd",e.classList.add("deletion-finder-link"),e.href=mw.util.getUrl("Special:AllPages",{from:`Articles for deletion/${mw.config.get("wgPageName").replaceAll("_"," ")}`,to:`Articles for deletion/${mw.config.get("wgPageName").replaceAll("_"," ")} (9z)`,namespace:"4"}),e.target="_blank",e.textContent="Previously at AfD",t.append(e)}});})();

// </pre>
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3R5bGVzL2RlbGV0aW9uLWZpbmRlci5jc3MiLCAiLi4vdXRpbGl0eS50cyIsICIuLi9zY3JpcHRzL2RlbGV0aW9uLWZpbmRlci50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLmRlbGV0aW9uLWZpbmRlci1saW5re2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0OjVweDtmb250LXNpemU6MTJweH0uZGVsZXRpb24tZmluZGVyLWxpbms6YmVmb3Jle2Rpc3BsYXk6aW5saW5lLWJsb2NrO3RyYW5zZm9ybTp0cmFuc2xhdGVZKDJweCk7bWFyZ2luLXJpZ2h0OjNweH0jZGVsZXRpb24tZmluZGVyLXByZXZpb3VzbHktZGVsZXRlZHtjb2xvcjojZDMzfSNkZWxldGlvbi1maW5kZXItcHJldmlvdXNseS1kZWxldGVkOmJlZm9yZXtjb250ZW50OnVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9JTIyaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmclMjIgd2lkdGg9JTIyMTIlMjIgaGVpZ2h0PSUyMjEyJTIyIGZpbGw9JTIyJTIzZGQzMzMzJTIyIHZpZXdCb3g9JTIyMCAwIDIwIDIwJTIyJTNFJTNDdGl0bGUlM0UgdHJhc2ggJTNDL3RpdGxlJTNFJTNDcGF0aCBkPSUyMk0xNyAyaC0zLjVsLTEtMWgtNWwtMSAxSDN2MmgxNHpNNCAxN2EyIDIgMCAwIDAgMiAyaDhhMiAyIDAgMCAwIDItMlY1SDR6JTIyLyUzRSUzQy9zdmclM0VcIil9I2RlbGV0aW9uLWZpbmRlci1wcmV2aW91cy1hZmR7Y29sb3I6IzM2Y30jZGVsZXRpb24tZmluZGVyLXByZXZpb3VzLWFmZDpiZWZvcmV7Y29udGVudDp1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHhtbG5zPSUyMmh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJTIyIHdpZHRoPSUyMjE1JTIyIGhlaWdodD0lMjIxNSUyMiBmaWxsPSUyMiUyMzMzNjZjYyUyMiB2aWV3Qm94PSUyMjAgMCAyMCAyMCUyMiUzRSUzQ3RpdGxlJTNFIGluZm8gJTNDL3RpdGxlJTNFJTNDcGF0aCBkPSUyMk00IDEwYTYgNiAwIDEgMCAxMiAwIDYgNiAwIDAgMC0xMiAwbTYtOGE4IDggMCAxIDEgMCAxNiA4IDggMCAwIDEgMC0xNm0xIDd2NUg5Vjl6bTAtMVY2SDl2MnolMjIvJTNFJTNDL3N2ZyUzRVwiKX1cbiIsICJpbXBvcnQgdHlwZSB7IEFwaVF1ZXJ5UmV2aXNpb25zUGFyYW1zIH0gZnJvbSAndHlwZXMtbWVkaWF3aWtpLWFwaSc7XG5pbXBvcnQgdHlwZSB7IFBhZ2VSZXZpc2lvbnNSZXN1bHQgfSBmcm9tICcuL2dsb2JhbC10eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBhcGkgPSBuZXcgbXcuQXBpKCk7XG5cbi8qKlxuICogRmV0Y2hlcyB0aGUgY29udGVudCBvZiBhIGdpdmVuIHBhZ2UuXG4gKiBAcGFyYW0gdGl0bGUgVGhlIHRpdGxlIHRvIGZldGNoLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UGFnZUNvbnRlbnQodGl0bGU6IHN0cmluZykge1xuICAgIHJldHVybiAoXG4gICAgICAgIChhd2FpdCBhcGkuZ2V0KHtcbiAgICAgICAgICAgIGFjdGlvbjogJ3F1ZXJ5JyxcbiAgICAgICAgICAgIGZvcm1hdHZlcnNpb246ICcyJyxcbiAgICAgICAgICAgIHByb3A6ICdyZXZpc2lvbnMnLFxuICAgICAgICAgICAgcnZwcm9wOiAnY29udGVudCcsXG4gICAgICAgICAgICBydnNsb3RzOiAnbWFpbicsXG4gICAgICAgICAgICB0aXRsZXM6IHRpdGxlLFxuICAgICAgICB9IHNhdGlzZmllcyBBcGlRdWVyeVJldmlzaW9uc1BhcmFtcykpIGFzIFBhZ2VSZXZpc2lvbnNSZXN1bHRcbiAgICApLnF1ZXJ5LnBhZ2VzWzBdLnJldmlzaW9ucz8uWzBdLnNsb3RzLm1haW4uY29udGVudC50cmltKCk7XG59XG4iLCAiaW1wb3J0IHR5cGUgeyBBcGlRdWVyeUxvZ0V2ZW50c1BhcmFtcywgQXBpUXVlcnlQYXJhbXMgfSBmcm9tICd0eXBlcy1tZWRpYXdpa2ktYXBpJztcbmltcG9ydCBjc3NDb250ZW50IGZyb20gJy4uL3N0eWxlcy9kZWxldGlvbi1maW5kZXIuY3NzJyB3aXRoIHsgdHlwZTogJ2NzcycgfTtcbmltcG9ydCB7IGFwaSB9IGZyb20gJy4uL3V0aWxpdHknO1xuXG5tdy5sb2FkZXIudXNpbmcoWydtZWRpYXdpa2kudXRpbCddLCBhc3luYyAoKSA9PiB7XG4gICAgaWYgKG13LmNvbmZpZy5nZXQoJ3dnTmFtZXNwYWNlTnVtYmVyJykgIT09IDApIHJldHVybjtcbiAgICBpZiAobXcuY29uZmlnLmdldCgnd2dBY3Rpb24nKSAhPT0gJ3ZpZXcnKSByZXR1cm47XG4gICAgaWYgKG13LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKSA9PT0gJ01haW5fUGFnZScpIHJldHVybjtcblxuICAgIG13LnV0aWwuYWRkQ1NTKGNzc0NvbnRlbnQpO1xuXG4gICAgY29uc3QgdGl0bGVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZpcnN0SGVhZGluZycpO1xuXG4gICAgaWYgKCF0aXRsZUVsZW1lbnQpIHJldHVybiBtdy5ub3RpZnkoJ2RlbGV0aW9uLWZpbmRlcjogQ291bGQgbm90IGZpbmQgdGl0bGUgZWxlbWVudCEnLCB7IHR5cGU6ICdlcnJvcicgfSk7XG5cbiAgICBjb25zdCBkZWxldGlvblJlc3VsdCA9IChhd2FpdCBhcGkuZ2V0KHtcbiAgICAgICAgYWN0aW9uOiAncXVlcnknLFxuICAgICAgICBsZWFjdGlvbjogJ2RlbGV0ZS9kZWxldGUnLFxuICAgICAgICBsZWxpbWl0OiAxLFxuICAgICAgICBsZXRpdGxlOiBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyksXG4gICAgICAgIGxpc3Q6ICdsb2dldmVudHMnLFxuICAgIH0gc2F0aXNmaWVzIEFwaVF1ZXJ5TG9nRXZlbnRzUGFyYW1zKSkgYXMgeyBxdWVyeTogeyBsb2dldmVudHM6IHVua25vd25bXSB9IH07XG5cbiAgICBpZiAoZGVsZXRpb25SZXN1bHQucXVlcnkubG9nZXZlbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgICAgbGluay5pZCA9ICdkZWxldGlvbi1maW5kZXItcHJldmlvdXNseS1kZWxldGVkJztcbiAgICAgICAgbGluay5jbGFzc0xpc3QuYWRkKCdkZWxldGlvbi1maW5kZXItbGluaycpO1xuICAgICAgICBsaW5rLmhyZWYgPSBtdy51dGlsLmdldFVybCgnU3BlY2lhbDpMb2cvZGVsZXRlJywgeyBwYWdlOiBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJykucmVwbGFjZUFsbCgnXycsICcgJyksIHN1YnR5cGU6ICdkZWxldGUnIH0pO1xuICAgICAgICBsaW5rLnRhcmdldCA9ICdfYmxhbmsnO1xuICAgICAgICBsaW5rLnRleHRDb250ZW50ID0gJ1ByZXZpb3VzbHkgZGVsZXRlZCc7XG5cbiAgICAgICAgdGl0bGVFbGVtZW50LmFwcGVuZChsaW5rKTtcbiAgICB9XG5cbiAgICBjb25zdCBhZmRFeGlzdHMgPSAoYXdhaXQgYXBpLmdldCh7XG4gICAgICAgIGFjdGlvbjogJ3F1ZXJ5JyxcbiAgICAgICAgZm9ybWF0dmVyc2lvbjogJzInLFxuICAgICAgICB0aXRsZXM6IGBXaWtpcGVkaWE6QXJ0aWNsZXNfZm9yX2RlbGV0aW9uLyR7bXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpfWAsXG4gICAgfSBzYXRpc2ZpZXMgQXBpUXVlcnlQYXJhbXMpKSBhcyB7XG4gICAgICAgIHF1ZXJ5OiB7IHBhZ2VzOiB7IG1pc3Npbmc/OiB0cnVlIH1bXSB9O1xuICAgIH07XG5cbiAgICBpZiAoIWFmZEV4aXN0cy5xdWVyeS5wYWdlc1swXS5taXNzaW5nKSB7XG4gICAgICAgIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgICAgIGxpbmsuaWQgPSAnZGVsZXRpb24tZmluZGVyLXByZXZpb3VzLWFmZCc7XG4gICAgICAgIGxpbmsuY2xhc3NMaXN0LmFkZCgnZGVsZXRpb24tZmluZGVyLWxpbmsnKTtcbiAgICAgICAgbGluay5ocmVmID0gbXcudXRpbC5nZXRVcmwoJ1NwZWNpYWw6QWxsUGFnZXMnLCB7XG4gICAgICAgICAgICBmcm9tOiBgQXJ0aWNsZXMgZm9yIGRlbGV0aW9uLyR7bXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLnJlcGxhY2VBbGwoJ18nLCAnICcpfWAsXG4gICAgICAgICAgICB0bzogYEFydGljbGVzIGZvciBkZWxldGlvbi8ke213LmNvbmZpZy5nZXQoJ3dnUGFnZU5hbWUnKS5yZXBsYWNlQWxsKCdfJywgJyAnKX0gKDl6KWAsXG4gICAgICAgICAgICBuYW1lc3BhY2U6ICc0JyxcbiAgICAgICAgfSk7XG4gICAgICAgIGxpbmsudGFyZ2V0ID0gJ19ibGFuayc7XG4gICAgICAgIGxpbmsudGV4dENvbnRlbnQgPSAnUHJldmlvdXNseSBhdCBBZkQnO1xuXG4gICAgICAgIHRpdGxlRWxlbWVudC5hcHBlbmQobGluayk7XG4gICAgfVxufSk7XG4iXSwKICAibWFwcGluZ3MiOiAiOzs7bUJBQUEsSUFBQUEsRUFBQTtFQ0dPLElBQU1DLEVBQU0sSUFBSSxHQUFHLElDQzFCLEdBQUcsT0FBTyxNQUFNLENBQUMsZ0JBQWdCLEVBQUcsU0FBWSxDQUc1QyxHQUZJLEdBQUcsT0FBTyxJQUFJLG1CQUFtQixJQUFNLEdBQ3ZDLEdBQUcsT0FBTyxJQUFJLFVBQVUsSUFBTSxRQUM5QixHQUFHLE9BQU8sSUFBSSxZQUFZLElBQU0sWUFBYSxPQUVqRCxHQUFHLEtBQUssT0FBT0MsQ0FBVSxFQUV6QixJQUFNQyxFQUFlLFNBQVMsY0FBYyxlQUFlLEVBRTNELEdBQUksQ0FBQ0EsRUFBYyxPQUFPLEdBQUcsT0FBTyxpREFBa0QsQ0FBRSxLQUFNLE9BQVEsQ0FBQyxFQVV2RyxJQVJ3QixNQUFNQyxFQUFJLElBQUksQ0FDbEMsT0FBUSxRQUNSLFNBQVUsZ0JBQ1YsUUFBUyxFQUNULFFBQVMsR0FBRyxPQUFPLElBQUksWUFBWSxFQUNuQyxLQUFNLFdBQ1YsQ0FBbUMsR0FFaEIsTUFBTSxVQUFVLE9BQVMsRUFBRyxDQUMzQyxJQUFNQyxFQUFPLFNBQVMsY0FBYyxHQUFHLEVBQ3ZDQSxFQUFLLEdBQUsscUNBQ1ZBLEVBQUssVUFBVSxJQUFJLHNCQUFzQixFQUN6Q0EsRUFBSyxLQUFPLEdBQUcsS0FBSyxPQUFPLHFCQUFzQixDQUFFLEtBQU0sR0FBRyxPQUFPLElBQUksWUFBWSxFQUFFLFdBQVcsSUFBSyxHQUFHLEVBQUcsUUFBUyxRQUFTLENBQUMsRUFDOUhBLEVBQUssT0FBUyxTQUNkQSxFQUFLLFlBQWMscUJBRW5CRixFQUFhLE9BQU9FLENBQUksQ0FDNUIsQ0FVQSxHQUFJLEVBUmUsTUFBTUQsRUFBSSxJQUFJLENBQzdCLE9BQVEsUUFDUixjQUFlLElBQ2YsT0FBUSxtQ0FBbUMsR0FBRyxPQUFPLElBQUksWUFBWSxDQUFDLEVBQzFFLENBQTBCLEdBSVgsTUFBTSxNQUFNLENBQUMsRUFBRSxRQUFTLENBQ25DLElBQU1DLEVBQU8sU0FBUyxjQUFjLEdBQUcsRUFDdkNBLEVBQUssR0FBSywrQkFDVkEsRUFBSyxVQUFVLElBQUksc0JBQXNCLEVBQ3pDQSxFQUFLLEtBQU8sR0FBRyxLQUFLLE9BQU8sbUJBQW9CLENBQzNDLEtBQU0seUJBQXlCLEdBQUcsT0FBTyxJQUFJLFlBQVksRUFBRSxXQUFXLElBQUssR0FBRyxDQUFDLEdBQy9FLEdBQUkseUJBQXlCLEdBQUcsT0FBTyxJQUFJLFlBQVksRUFBRSxXQUFXLElBQUssR0FBRyxDQUFDLFFBQzdFLFVBQVcsR0FDZixDQUFDLEVBQ0RBLEVBQUssT0FBUyxTQUNkQSxFQUFLLFlBQWMsb0JBRW5CRixFQUFhLE9BQU9FLENBQUksQ0FDNUIsQ0FDSixDQUFDIiwKICAibmFtZXMiOiBbImRlbGV0aW9uX2ZpbmRlcl9kZWZhdWx0IiwgImFwaSIsICJkZWxldGlvbl9maW5kZXJfZGVmYXVsdCIsICJ0aXRsZUVsZW1lbnQiLCAiYXBpIiwgImxpbmsiXQp9Cg==
