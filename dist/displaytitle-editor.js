// <nowiki>
// Note: This script was compiled and minified from TypeScript. For a more readable version, see https://github.com/Eejit43/wikipedia-scripts/blob/main/scripts/displaytitle-editor.ts

"use strict";(()=>{mw.loader.using(["mediawiki.util","oojs-ui-core","oojs-ui.styles.icons-editing-core"],()=>{if(mw.config.get("wgNamespaceNumber")<0||!mw.config.get("wgIsProbablyEditable"))return;mw.util.addCSS(`
#displaytitle-edit-button {
    margin-right: 0;
    margin-left: 3px;
    font-size: 15px;
}

#displaytitle-edit-box {
    display: inline-block;
    ${mw.config.get("skin")==="modern"?"margin-top: 2px;":""}
    margin-bottom: 2px;
    width: 200px;
    max-width: 200px;
    font-size: 15px;
}`),mw.config.get("skin")==="modern"&&mw.util.addCSS(`
#mw_header {
    height: 2.5em;
}

#p-personal {
    top: 2.5em;
}

#mw_main {
    margin-top: 4em;
}`);let i=new OO.ui.ButtonWidget({icon:"edit",framed:!1,id:"displaytitle-edit-button"});i.on("click",async()=>{i.setDisabled(!0),mw.config.get("skin")==="modern"&&mw.util.addCSS(`
#mw_header {
    height: 3em;
}

#p-personal {
    top: 3em;
}

#mw_main {
    margin-top: 4.5em;
}`);let n=mw.config.get("wgPageName").replaceAll("_"," "),e=new OO.ui.TextInputWidget({placeholder:n,id:"displaytitle-edit-box"});e.on("enter",async()=>{e.setDisabled(!0),e.pushPending(),await new mw.Api().edit(mw.config.get("wgPageName"),o=>{let t=o.content.replaceAll(/{{\s*displaytitle\s*:\s*(.*?)\s*}}\n*/gi,"");if(!e.getValue()||e.getValue().replaceAll("_"," ")===n)return{text:t,summary:"Removing DISPLAYTITLE (via [[User:Eejit43/scripts/displaytitle-editor|script]])"};let s=`${t===o.content?"Adding DISPLAYTITLE of":"Changing DISPLAYTITLE to"} "${e.getValue()}" (via [[User:Eejit43/scripts/displaytitle-editor|script]])`,r=/^#redirect\s*\[\[.*?]]/i;return/{{short description/i.test(t)?{text:t.replace(/{{short description(.*?)}}/i,`{{short description$1}}
{{DISPLAYTITLE:${e.getValue()}}}`),summary:s}:r.test(t)?{text:t.replace(r,`$&

{{DISPLAYTITLE:${e.getValue()}}}`),summary:s}:{text:`{{DISPLAYTITLE:${e.getValue()}}}
${t}`,summary:s}}),mw.notify("Successfully updated DISPLAYTITLE, reloading...",{type:"success"}),window.location.reload()}),e.setDisabled(!0),e.pushPending(),i.$element[0].after(e.$element[0]);let a=(await new mw.Api().get({action:"query",formatversion:"2",prop:"revisions",rvprop:"content",rvslots:"main",titles:mw.config.get("wgPageName")})).query.pages[0].revisions[0].slots.main.content.match(/{{\s*displaytitle\s*:\s*(.*?)\s*}}/gi);a&&e.setValue(a.at(-1).replace(/{{\s*displaytitle\s*:\s*(.*?)\s*}}/i,"$1")),e.setDisabled(!1),e.popPending()}),document.querySelector("#firstHeading")?.append(i.$element[0])});})();

// </nowiki>
//# sourceMappingURL=data:application/json;base64,
