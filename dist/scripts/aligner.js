"use strict";(()=>{if(mw.config.get("wgNamespaceNumber")<0||!mw.config.get("wgIsProbablyEditable"))return;const i=["infobox","speciesbox","taxobox","automatic taxobox","osm location map","motorsport season"];mw.loader.using(["mediawiki.util","mediawiki.notification","jquery.textSelection"],()=>{mw.util.addPortletLink(mw.config.get("skin")==="minerva"?"p-navigation":"p-cactions","#","Align template params","align-params").addEventListener("click",o=>{o.preventDefault(),window.wikEd?.useWikEd&&window.wikEd.UpdateTextarea();const s=$("#wpTextbox1");if(!s)return mw.notification.notify("Edit box not found, are you in edit mode?",{type:"error",autoHideSeconds:"short"});const t=s.textSelection("getContents");if(!t)return mw.notification.notify("Edit box value not found!",{type:"error",autoHideSeconds:"short"});let x=0;function y(e){if(e==="")return mw.notification.notify("Infobox not found!",{type:"error",autoHideSeconds:"short"});if(l!==0)return mw.notification.notify("Template was not properly closed!",{type:"error",autoHideSeconds:"short"});let r=0;const a=String(e),f=e.split(`
`),h=[];for(const w of f){const d=splitIntoParameters(w.trim());for(const u of d){const g=u.trim();if(!g.startsWith("|")||g.split("=").length!==2){h.push(g);continue}let[m,b]=splitParameter(g);m=m.slice(1).trim(),m.length>r&&(r=m.length),h.push("| "+m+"="+b)}}let c="";r+=2;for(let w of h){const d=splitParameter(w);if(d.length<2){c+=w+=`
`;continue}let u=d[0].trim();for(;u.length<r;)u+=" ";c+=u+" = "+d[1].trim()+`
`}c.endsWith(`
`)&&(c=c.slice(0,-1)),s.textSelection("setContents",s.textSelection("getContents").replace(a,c).replace(/\n+$/,"")),window.wikEd?.useWikEd&&window.wikEd.UpdateFrame()}let p="",l=0;for(let e=0;e<t.length;e++){let r=!1;for(let a of i){a="{{"+a;const f=a.length;t.length-e>f&&(t.slice(e,e+f).toLowerCase()===a||t.slice(e,e+f).toLowerCase()===a.replace(" ","_"))&&(l++,p+=t[e],r=!0)}l>=1&&!r&&(p+=t[e],t[e]==="{"?l++:t[e]==="}"&&(l--,l===0&&(x++,y(p),p="")))}mw.notification.notify(`Successfully aligned ${x} templates!`,{type:"success",autoHideSeconds:"short"})})})})();function splitParameter(i){const n=i.split("=");return n.length<=2?n:[n.shift(),n.join("=")]}function splitIntoParameters(i){if(i.startsWith("{{")&&i.endsWith("}}"))return i.includes("|")?["{{"+splitIntoParameters(i.slice(2,-2))[0],...splitIntoParameters(i.slice(2,-2)).slice(1),"}}"]:[i];const n=[];let o="",s=0;for(const t of i)o+=t,t==="{"||t==="["?s+=1:t===""||t==="]"?s--:t==="|"&&s===0&&o.trim()!=="|"&&(n.push(o.slice(0,-1).trim()),o="|");return n.push(o),n}
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc2NyaXB0cy9hbGlnbmVyLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG5pbnRlcmZhY2UgV2luZG93IHtcbiAgICB3aWtFZD86IHtcbiAgICAgICAgdXNlV2lrRWQ6IGJvb2xlYW47XG4gICAgICAgIFVwZGF0ZVRleHRhcmVhOiAoKSA9PiB2b2lkOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuICAgICAgICBVcGRhdGVGcmFtZTogKCkgPT4gdm9pZDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbiAgICB9O1xufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzLCBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmludGVyZmFjZSBKUXVlcnk8VEVsZW1lbnQgZXh0ZW5kcyBOb2RlID0gSFRNTEVsZW1lbnQ+IGV4dGVuZHMgSXRlcmFibGU8VEVsZW1lbnQ+IHtcbiAgICB0ZXh0U2VsZWN0aW9uKG1ldGhvZE5hbWU6ICdzZXRDb250ZW50cycsIHZhbHVlOiBzdHJpbmcpOiB2b2lkO1xufVxuXG4oKCkgPT4ge1xuICAgIGlmIChtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpIDwgMCkgcmV0dXJuOyAvLyBEb24ndCBydW4gaW4gdmlydHVhbCBuYW1lc3BhY2VzXG4gICAgaWYgKCFtdy5jb25maWcuZ2V0KCd3Z0lzUHJvYmFibHlFZGl0YWJsZScpKSByZXR1cm47IC8vIERvbid0IHJ1biBpZiB1c2VyIGNhbid0IGVkaXQgcGFnZVxuXG4gICAgY29uc3Qgc2VhcmNoZXMgPSBbJ2luZm9ib3gnLCAnc3BlY2llc2JveCcsICd0YXhvYm94JywgJ2F1dG9tYXRpYyB0YXhvYm94JywgJ29zbSBsb2NhdGlvbiBtYXAnLCAnbW90b3JzcG9ydCBzZWFzb24nXTtcblxuICAgIG13LmxvYWRlci51c2luZyhbJ21lZGlhd2lraS51dGlsJywgJ21lZGlhd2lraS5ub3RpZmljYXRpb24nLCAnanF1ZXJ5LnRleHRTZWxlY3Rpb24nXSwgKCkgPT4ge1xuICAgICAgICBjb25zdCBsaW5rID0gbXcudXRpbC5hZGRQb3J0bGV0TGluayhtdy5jb25maWcuZ2V0KCdza2luJykgPT09ICdtaW5lcnZhJyA/ICdwLW5hdmlnYXRpb24nIDogJ3AtY2FjdGlvbnMnLCAnIycsICdBbGlnbiB0ZW1wbGF0ZSBwYXJhbXMnLCAnYWxpZ24tcGFyYW1zJykhO1xuICAgICAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICBpZiAod2luZG93Lndpa0VkPy51c2VXaWtFZCkgd2luZG93Lndpa0VkLlVwZGF0ZVRleHRhcmVhKCk7XG5cbiAgICAgICAgICAgIGNvbnN0IGVkaXRCb3ggPSAkKCcjd3BUZXh0Ym94MScpO1xuXG4gICAgICAgICAgICBpZiAoIWVkaXRCb3gpIHJldHVybiBtdy5ub3RpZmljYXRpb24ubm90aWZ5KCdFZGl0IGJveCBub3QgZm91bmQsIGFyZSB5b3UgaW4gZWRpdCBtb2RlPycsIHsgdHlwZTogJ2Vycm9yJywgYXV0b0hpZGVTZWNvbmRzOiAnc2hvcnQnIH0pO1xuXG4gICAgICAgICAgICBjb25zdCB0ZXh0ID0gZWRpdEJveC50ZXh0U2VsZWN0aW9uKCdnZXRDb250ZW50cycpO1xuXG4gICAgICAgICAgICBpZiAoIXRleHQpIHJldHVybiBtdy5ub3RpZmljYXRpb24ubm90aWZ5KCdFZGl0IGJveCB2YWx1ZSBub3QgZm91bmQhJywgeyB0eXBlOiAnZXJyb3InLCBhdXRvSGlkZVNlY29uZHM6ICdzaG9ydCcgfSk7XG5cbiAgICAgICAgICAgIGxldCBjb3VudCA9IDA7XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogRmluaXNoZXMgcHJvY2Vzc2luZyBhbiBpbmZvYm94IGFuZCB1cGRhdGVzIHRoZSBlZGl0IGJveCBjb250ZW50cy5cbiAgICAgICAgICAgICAqIEBwYXJhbSB0ZW1wbGF0ZSBUaGUgdGVtcGxhdGUgc3RyaW5nIHRvIHByb2Nlc3MuXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGZ1bmN0aW9uIHByb2Nlc3NJbmZvYm94KHRlbXBsYXRlOiBzdHJpbmcpIHtcbiAgICAgICAgICAgICAgICBpZiAodGVtcGxhdGUgPT09ICcnKSByZXR1cm4gbXcubm90aWZpY2F0aW9uLm5vdGlmeSgnSW5mb2JveCBub3QgZm91bmQhJywgeyB0eXBlOiAnZXJyb3InLCBhdXRvSGlkZVNlY29uZHM6ICdzaG9ydCcgfSk7XG5cbiAgICAgICAgICAgICAgICBpZiAob3BlbiAhPT0gMCkgcmV0dXJuIG13Lm5vdGlmaWNhdGlvbi5ub3RpZnkoJ1RlbXBsYXRlIHdhcyBub3QgcHJvcGVybHkgY2xvc2VkIScsIHsgdHlwZTogJ2Vycm9yJywgYXV0b0hpZGVTZWNvbmRzOiAnc2hvcnQnIH0pO1xuXG4gICAgICAgICAgICAgICAgbGV0IG1heExlbmd0aCA9IDA7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBvcmlnVGVtcGxhdGUgPSBTdHJpbmcodGVtcGxhdGUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxpbmVzID0gdGVtcGxhdGUuc3BsaXQoJ1xcbicpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld0xpbmVzID0gW107XG5cbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGxpbmUgb2YgbGluZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcGFyYW1ldGVyc0luTGluZSA9IHNwbGl0SW50b1BhcmFtZXRlcnMobGluZS50cmltKCkpO1xuXG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcGFyYW1ldGVyIG9mIHBhcmFtZXRlcnNJbkxpbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxpbmUgPSBwYXJhbWV0ZXIudHJpbSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFsaW5lLnN0YXJ0c1dpdGgoJ3wnKSB8fCBsaW5lLnNwbGl0KCc9JykubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3TGluZXMucHVzaChsaW5lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IFtmaXJzdFBhcnQsIGxhc3RQYXJ0XSA9IHNwbGl0UGFyYW1ldGVyKGxpbmUpIGFzIFtzdHJpbmcsIHN0cmluZ107IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgcHJlZmVyLWNvbnN0XG4gICAgICAgICAgICAgICAgICAgICAgICBmaXJzdFBhcnQgPSBmaXJzdFBhcnQuc2xpY2UoMSkudHJpbSgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmlyc3RQYXJ0Lmxlbmd0aCA+IG1heExlbmd0aCkgbWF4TGVuZ3RoID0gZmlyc3RQYXJ0Lmxlbmd0aDtcblxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3TGluZXMucHVzaCgnfCAnICsgZmlyc3RQYXJ0ICsgJz0nICsgbGFzdFBhcnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgbGV0IG91dHB1dCA9ICcnO1xuXG4gICAgICAgICAgICAgICAgbWF4TGVuZ3RoICs9IDI7IC8vIHRvIGluY2x1ZGUgJ3wgJ1xuXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgbGluZSBvZiBuZXdMaW5lcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJ0cyA9IHNwbGl0UGFyYW1ldGVyKGxpbmUpIGFzIFtzdHJpbmcsIHN0cmluZ107XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dCArPSBsaW5lICs9ICdcXG4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBsZXQgZmlyc3RQYXJ0ID0gcGFydHNbMF0udHJpbSgpO1xuXG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChmaXJzdFBhcnQubGVuZ3RoIDwgbWF4TGVuZ3RoKSBmaXJzdFBhcnQgKz0gJyAnO1xuXG4gICAgICAgICAgICAgICAgICAgIG91dHB1dCArPSBmaXJzdFBhcnQgKyAnID0gJyArIHBhcnRzWzFdLnRyaW0oKSArICdcXG4nO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChvdXRwdXQuZW5kc1dpdGgoJ1xcbicpKSBvdXRwdXQgPSBvdXRwdXQuc2xpY2UoMCwgLTEpO1xuXG4gICAgICAgICAgICAgICAgZWRpdEJveC50ZXh0U2VsZWN0aW9uKCdzZXRDb250ZW50cycsIGVkaXRCb3gudGV4dFNlbGVjdGlvbignZ2V0Q29udGVudHMnKS5yZXBsYWNlKG9yaWdUZW1wbGF0ZSwgb3V0cHV0KS5yZXBsYWNlKC9cXG4rJC8sICcnKSk7XG5cbiAgICAgICAgICAgICAgICBpZiAod2luZG93Lndpa0VkPy51c2VXaWtFZCkgd2luZG93Lndpa0VkLlVwZGF0ZUZyYW1lKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxldCB0ZW1wbGF0ZSA9ICcnO1xuICAgICAgICAgICAgbGV0IG9wZW4gPSAwO1xuXG4gICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGV4dC5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgICAgICBsZXQgZm9vID0gZmFsc2U7XG5cbiAgICAgICAgICAgICAgICBmb3IgKGxldCBzZWFyY2ggb2Ygc2VhcmNoZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VhcmNoID0gJ3t7JyArIHNlYXJjaDtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VhcmNoTGVuZ3RoID0gc2VhcmNoLmxlbmd0aDtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0Lmxlbmd0aCAtIGluZGV4ID4gc2VhcmNoTGVuZ3RoICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAodGV4dC5zbGljZShpbmRleCwgaW5kZXggKyBzZWFyY2hMZW5ndGgpLnRvTG93ZXJDYXNlKCkgPT09IHNlYXJjaCB8fCB0ZXh0LnNsaWNlKGluZGV4LCBpbmRleCArIHNlYXJjaExlbmd0aCkudG9Mb3dlckNhc2UoKSA9PT0gc2VhcmNoLnJlcGxhY2UoJyAnLCAnXycpKVxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wZW4rKztcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlICs9IHRleHRbaW5kZXhdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9vID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChvcGVuID49IDEgJiYgIWZvbykge1xuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZSArPSB0ZXh0W2luZGV4XTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAodGV4dFtpbmRleF0gPT09ICd7Jykgb3BlbisrO1xuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICh0ZXh0W2luZGV4XSA9PT0gJ30nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcGVuLS07XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcGVuID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQrKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzSW5mb2JveCh0ZW1wbGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGUgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbXcubm90aWZpY2F0aW9uLm5vdGlmeShgU3VjY2Vzc2Z1bGx5IGFsaWduZWQgJHtjb3VudH0gdGVtcGxhdGVzIWAsIHsgdHlwZTogJ3N1Y2Nlc3MnLCBhdXRvSGlkZVNlY29uZHM6ICdzaG9ydCcgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSkoKTtcblxuLyoqXG4gKiBTcGxpdHMgYSBzdHJpbmcgaW50byBhbiBBcnJheSBjb250YWluaW5nIHRoZSBrZXkgYW5kIHZhbHVlLlxuICogQHBhcmFtIHN0cmluZyBUaGUgZnVsbCBzdHJpbmcgdG8gc3BsaXQuXG4gKi9cbmZ1bmN0aW9uIHNwbGl0UGFyYW1ldGVyKHN0cmluZzogc3RyaW5nKSB7XG4gICAgY29uc3Qgc3BsaXQgPSBzdHJpbmcuc3BsaXQoJz0nKTtcbiAgICBpZiAoc3BsaXQubGVuZ3RoIDw9IDIpIHJldHVybiBzcGxpdDtcblxuICAgIGNvbnN0IGZpcnN0ID0gc3BsaXQuc2hpZnQoKTtcbiAgICByZXR1cm4gW2ZpcnN0LCBzcGxpdC5qb2luKCc9JyldO1xufVxuXG4vKipcbiAqIFNwbGl0cyBhIHRlbXBsYXRlIGludG8gYW4gQXJyYXkgd2l0aCBhbGwgcGFyYW1ldGVycy5cbiAqIEBwYXJhbSBzdHJpbmcgVGhlIHRlbXBsYXRlIHRvIHByb2Nlc3MuXG4gKi9cbmZ1bmN0aW9uIHNwbGl0SW50b1BhcmFtZXRlcnMoc3RyaW5nOiBzdHJpbmcpOiBzdHJpbmdbXSB7XG4gICAgaWYgKHN0cmluZy5zdGFydHNXaXRoKCd7eycpICYmIHN0cmluZy5lbmRzV2l0aCgnfX0nKSkge1xuICAgICAgICBpZiAoIXN0cmluZy5pbmNsdWRlcygnfCcpKSByZXR1cm4gW3N0cmluZ107XG5cbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IHNwbGl0SW50b1BhcmFtZXRlcnMoc3RyaW5nLnNsaWNlKDIsIC0yKSk7XG4gICAgICAgIHJldHVybiBbJ3t7JyArIHJlc3VsdHNbMF0sIC4uLnNwbGl0SW50b1BhcmFtZXRlcnMoc3RyaW5nLnNsaWNlKDIsIC0yKSkuc2xpY2UoMSksICd9fSddO1xuICAgIH1cblxuICAgIGNvbnN0IHBhcmFtZXRlcnMgPSBbXTtcbiAgICBsZXQgdGVtcG9yYXJ5ID0gJyc7XG4gICAgbGV0IG9wZW4gPSAwO1xuXG4gICAgZm9yIChjb25zdCBjaGFyIG9mIHN0cmluZykge1xuICAgICAgICB0ZW1wb3JhcnkgKz0gY2hhcjtcblxuICAgICAgICBpZiAoY2hhciA9PT0gJ3snIHx8IGNoYXIgPT09ICdbJykgb3BlbiArPSAxO1xuICAgICAgICBlbHNlIGlmIChjaGFyID09PSAnJyB8fCBjaGFyID09PSAnXScpIG9wZW4tLTtcbiAgICAgICAgZWxzZSBpZiAoY2hhciA9PT0gJ3wnICYmIG9wZW4gPT09IDAgJiYgdGVtcG9yYXJ5LnRyaW0oKSAhPT0gJ3wnKSB7XG4gICAgICAgICAgICBwYXJhbWV0ZXJzLnB1c2godGVtcG9yYXJ5LnNsaWNlKDAsIC0xKS50cmltKCkpO1xuICAgICAgICAgICAgdGVtcG9yYXJ5ID0gJ3wnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcGFyYW1ldGVycy5wdXNoKHRlbXBvcmFyeSk7XG5cbiAgICByZXR1cm4gcGFyYW1ldGVycztcbn1cbiJdLAogICJtYXBwaW5ncyI6ICJjQWNDLElBQU0sQ0FFSCxHQURJLEdBQUcsT0FBTyxJQUFJLG1CQUFtQixFQUFJLEdBQ3JDLENBQUMsR0FBRyxPQUFPLElBQUksc0JBQXNCLEVBQUcsT0FFNUMsTUFBTUEsRUFBVyxDQUFDLFVBQVcsYUFBYyxVQUFXLG9CQUFxQixtQkFBb0IsbUJBQW1CLEVBRWxILEdB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QUtwQixJQUM3Qm9CLElBQVMsS0FBT3BCLElBQVMsR0FBS21CLEVBQVUsS0FBSyxJQUFNLE1BQ3hERCxFQUFXLEtBQUtDLEVBQVUsTUFBTSxFQUFHLEVBQUUsRUFBRSxLQUFLLENBQUMsRUFDN0NBLEVBQVksS0FJcEIsT0FBQUQsRUFBVyxLQUFLQyxDQUFTLEVBRWxCRCxDQUNYIiwKICAibmFtZXMiOiBbInNlYXJjaGVzIiwgImV2ZW50IiwgImVkaXRCb3giLCAidGV4dCIsICJjb3VudCIsICJwcm9jZXNzSW5mb2JveCIsICJ0ZW1wbGF0ZSIsICJvcGVuIiwgIm1heExlbmd0aCIsICJvcmlnVGVtcGxhdGUiLCAibGluZXMiLCAibmV3TGluZXMiLCAibGluZSIsICJwYXJhbWV0ZXJzSW5MaW5lIiwgInBhcmFtZXRlciIsICJmaXJzdFBhcnQiLCAibGFzdFBhcnQiLCAib3V0cHV0IiwgInBhcnRzIiwgImluZGV4IiwgImZvbyIsICJzZWFyY2giLCAic2VhcmNoTGVuZ3RoIiwgInN0cmluZyIsICJzcGxpdCIsICJwYXJhbWV0ZXJzIiwgInRlbXBvcmFyeSIsICJjaGFyIl0KfQo=
