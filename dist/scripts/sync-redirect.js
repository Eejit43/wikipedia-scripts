// <nowiki>
// Note: This script was compiled and minified from TypeScript. For a more readable version, see https://github.com/Eejit43/wikipedia-scripts/blob/main/scripts/sync-redirect.ts

"use strict";mw.loader.using(["mediawiki.util"],async()=>{if(!mw.Title.isTalkNamespace(mw.config.get("wgNamespaceNumber")))return;const r=await new mw.Api().get({action:"query",formatversion:"2",prop:["info","revisions"],rvprop:"content",rvslots:"main",titles:`${mw.config.get("wgFormattedNamespaces")[mw.config.get("wgNamespaceNumber")-1]}:${mw.config.get("wgTitle")}`});if(!r.query.pages[0].redirect)return;mw.util.addPortletLink(mw.config.get("skin")==="minerva"?"p-tb":"p-cactions","#","Sync with main page redirect","sync-redirect").addEventListener("click",async g=>{g.preventDefault(),mw.notify("Editing...",{tag:"sync-redirect-notification"});const n=r.query.pages[0].revisions[0].slots.main.content,a=/#redirect:? *\[\[(.+)]]/i.exec(n)?.[1].replaceAll("_"," ").split("|")[0].split("#")[0].trim();if(!a)return mw.notify("Failed to parse redirect target!",{type:"error",tag:"sync-redirect-notification"});const o=new DOMParser().parseFromString(a,"text/html").documentElement.textContent;if(!o)return mw.notify("Failed to parse redirect target!",{type:"error",tag:"sync-redirect-notification"});const i=mw.Title.newFromText(o);if(!i)return mw.notify("Failed to parse redirect target!",{type:"error",tag:"sync-redirect-notification"});const e=i.getMainText(),c=/{{ *r(edirect)?( from)?(( a)? page)? (move|rename|pm) *}}/i.test(n),t=mw.config.get("wgFormattedNamespaces")[i.getNamespaceId()+1];await new mw.Api().edit(mw.config.get("wgPageName"),()=>({text:`#REDIRECT [[${t}:${e}]]${c?`

{{Redirect category shell|
{{R from move}}
}}`:""}`,summary:`Sync redirect with main page, to [[${t}:${e}]] (via [[User:Eejit43/scripts/sync-redirect|script]])`,minor:!0})).catch(async(m,d)=>{m==="nocreate-missing"?await new mw.Api().create(mw.config.get("wgPageName"),{summary:`Create redirect matching main page, to [[${t}:${e}]] (via [[User:Eejit43/scripts/sync-redirect|script]])`},`#REDIRECT [[${t}:${e}]]${c?`

{{Redirect category shell|
{{R from move}}
}}`:""}`).catch((p,w)=>{mw.notify(`Failed to redirect page: ${w?.error.info??"Unknown error"} (${p})`,{type:"error",tag:"sync-redirect-notification"})}):mw.notify(`Failed to redirect page: ${d?.error.info??"Unknown error"} (${m})`,{type:"error",tag:"sync-redirect-notification"})}),mw.notify("Successfully redirected page, reloading...",{type:"success",tag:"sync-redirect-notification"});const s=new URL(window.location.href);s.searchParams.set("redirect","no"),window.location.href=s.href})});

// </nowiki>
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc2NyaXB0cy9zeW5jLXJlZGlyZWN0LnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJpbXBvcnQgeyBNZWRpYVdpa2lEYXRhRXJyb3IsIFBhZ2VSZXZpc2lvbnNSZXN1bHQgfSBmcm9tICcuLi9nbG9iYWwtdHlwZXMnO1xuaW1wb3J0IHsgQXBpUXVlcnlJbmZvUGFyYW1zLCBBcGlRdWVyeVJldmlzaW9uc1BhcmFtcyB9IGZyb20gJy4uL25vZGVfbW9kdWxlcy90eXBlcy1tZWRpYXdpa2kvYXBpX3BhcmFtcy9pbmRleCc7XG5cbm13LmxvYWRlci51c2luZyhbJ21lZGlhd2lraS51dGlsJ10sIGFzeW5jICgpID0+IHtcbiAgICBpZiAoIW13LlRpdGxlLmlzVGFsa05hbWVzcGFjZShtdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpKSkgcmV0dXJuO1xuICAgIGNvbnN0IG1haW5QYWdlSW5mb1JldmlzaW9ucyA9IChhd2FpdCBuZXcgbXcuQXBpKCkuZ2V0KHtcbiAgICAgICAgYWN0aW9uOiAncXVlcnknLFxuICAgICAgICBmb3JtYXR2ZXJzaW9uOiAnMicsXG4gICAgICAgIHByb3A6IFsnaW5mbycsICdyZXZpc2lvbnMnXSxcbiAgICAgICAgcnZwcm9wOiAnY29udGVudCcsXG4gICAgICAgIHJ2c2xvdHM6ICdtYWluJyxcbiAgICAgICAgdGl0bGVzOiBgJHttdy5jb25maWcuZ2V0KCd3Z0Zvcm1hdHRlZE5hbWVzcGFjZXMnKVttdy5jb25maWcuZ2V0KCd3Z05hbWVzcGFjZU51bWJlcicpIC0gMV19OiR7bXcuY29uZmlnLmdldCgnd2dUaXRsZScpfWAsXG4gICAgfSBzYXRpc2ZpZXMgQXBpUXVlcnlJbmZvUGFyYW1zICYgQXBpUXVlcnlSZXZpc2lvbnNQYXJhbXMpKSBhcyBQYWdlUmV2aXNpb25zUmVzdWx0ICYgeyBxdWVyeTogeyBwYWdlczogeyByZWRpcmVjdD86IGJvb2xlYW4gfVtdIH0gfTtcbiAgICBpZiAoIW1haW5QYWdlSW5mb1JldmlzaW9ucy5xdWVyeS5wYWdlc1swXS5yZWRpcmVjdCkgcmV0dXJuO1xuXG4gICAgY29uc3QgbGluayA9IG13LnV0aWwuYWRkUG9ydGxldExpbmsobXcuY29uZmlnLmdldCgnc2tpbicpID09PSAnbWluZXJ2YScgPyAncC10YicgOiAncC1jYWN0aW9ucycsICcjJywgJ1N5bmMgd2l0aCBtYWluIHBhZ2UgcmVkaXJlY3QnLCAnc3luYy1yZWRpcmVjdCcpITtcblxuICAgIGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyAoZXZlbnQpID0+IHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICBtdy5ub3RpZnkoJ0VkaXRpbmcuLi4nLCB7IHRhZzogJ3N5bmMtcmVkaXJlY3Qtbm90aWZpY2F0aW9uJyB9KTtcblxuICAgICAgICBjb25zdCBtYWluUGFnZUNvbnRlbnQ6IHN0cmluZyA9IG1haW5QYWdlSW5mb1JldmlzaW9ucy5xdWVyeS5wYWdlc1swXS5yZXZpc2lvbnNbMF0uc2xvdHMubWFpbi5jb250ZW50O1xuXG4gICAgICAgIGNvbnN0IHJlZGlyZWN0VGFyZ2V0ID0gLyNyZWRpcmVjdDo/ICpcXFtcXFsoLispXV0vaS5leGVjKG1haW5QYWdlQ29udGVudCk/LlsxXS5yZXBsYWNlQWxsKCdfJywgJyAnKS5zcGxpdCgnfCcpWzBdLnNwbGl0KCcjJylbMF0udHJpbSgpO1xuICAgICAgICBpZiAoIXJlZGlyZWN0VGFyZ2V0KSByZXR1cm4gbXcubm90aWZ5KCdGYWlsZWQgdG8gcGFyc2UgcmVkaXJlY3QgdGFyZ2V0IScsIHsgdHlwZTogJ2Vycm9yJywgdGFnOiAnc3luYy1yZWRpcmVjdC1ub3RpZmljYXRpb24nIH0pO1xuXG4gICAgICAgIGNvbnN0IHJlZGlyZWN0VGFyZ2V0UGFyc2VkID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyhyZWRpcmVjdFRhcmdldCwgJ3RleHQvaHRtbCcpLmRvY3VtZW50RWxlbWVudC50ZXh0Q29udGVudDtcbiAgICAgICAgaWYgKCFyZWRpcmVjdFRhcmdldFBhcnNlZCkgcmV0dXJuIG13Lm5vdGlmeSgnRmFpbGVkIHRvIHBhcnNlIHJlZGlyZWN0IHRhcmdldCEnLCB7IHR5cGU6ICdlcnJvcicsIHRhZzogJ3N5bmMtcmVkaXJlY3Qtbm90aWZpY2F0aW9uJyB9KTtcblxuICAgICAgICBjb25zdCBtd1JlZGlyZWN0VGFyZ2V0ID0gbXcuVGl0bGUubmV3RnJvbVRleHQocmVkaXJlY3RUYXJnZXRQYXJzZWQpO1xuICAgICAgICBpZiAoIW13UmVkaXJlY3RUYXJnZXQpIHJldHVybiBtdy5ub3RpZnkoJ0ZhaWxlZCB0byBwYXJzZSByZWRpcmVjdCB0YXJnZXQhJywgeyB0eXBlOiAnZXJyb3InLCB0YWc6ICdzeW5jLXJlZGlyZWN0LW5vdGlmaWNhdGlvbicgfSk7XG5cbiAgICAgICAgY29uc3QgbWFpblRhcmdldFRleHQgPSBtd1JlZGlyZWN0VGFyZ2V0LmdldE1haW5UZXh0KCk7XG5cbiAgICAgICAgY29uc3QgcGFnZU1vdmUgPSAve3sgKnIoZWRpcmVjdCk/KCBmcm9tKT8oKCBhKT8gcGFnZSk/IChtb3ZlfHJlbmFtZXxwbSkgKn19L2kudGVzdChtYWluUGFnZUNvbnRlbnQpO1xuICAgICAgICBjb25zdCBkZXN0aW5hdGlvblRhbGtOYW1lc3BhY2VOYW1lID0gbXcuY29uZmlnLmdldCgnd2dGb3JtYXR0ZWROYW1lc3BhY2VzJylbbXdSZWRpcmVjdFRhcmdldC5nZXROYW1lc3BhY2VJZCgpICsgMV07XG4gICAgICAgIGF3YWl0IG5ldyBtdy5BcGkoKVxuICAgICAgICAgICAgLmVkaXQobXcuY29uZmlnLmdldCgnd2dQYWdlTmFtZScpLCAoKSA9PiAoe1xuICAgICAgICAgICAgICAgIHRleHQ6IGAjUkVESVJFQ1QgW1ske2Rlc3RpbmF0aW9uVGFsa05hbWVzcGFjZU5hbWV9OiR7bWFpblRhcmdldFRleHR9XV0ke3BhZ2VNb3ZlID8gJ1xcblxcbnt7UmVkaXJlY3QgY2F0ZWdvcnkgc2hlbGx8XFxue3tSIGZyb20gbW92ZX19XFxufX0nIDogJyd9YCxcbiAgICAgICAgICAgICAgICBzdW1tYXJ5OiBgU3luYyByZWRpcmVjdCB3aXRoIG1haW4gcGFnZSwgdG8gW1ske2Rlc3RpbmF0aW9uVGFsa05hbWVzcGFjZU5hbWV9OiR7bWFpblRhcmdldFRleHR9XV0gKHZpYSBbW1VzZXI6RWVqaXQ0My9zY3JpcHRzL3N5bmMtcmVkaXJlY3R8c2NyaXB0XV0pYCxcbiAgICAgICAgICAgICAgICBtaW5vcjogdHJ1ZSxcbiAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgLmNhdGNoKGFzeW5jIChlcnJvckNvZGU6IHN0cmluZywgZXJyb3JJbmZvOiBNZWRpYVdpa2lEYXRhRXJyb3IpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3JDb2RlID09PSAnbm9jcmVhdGUtbWlzc2luZycpXG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IG5ldyBtdy5BcGkoKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmNyZWF0ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtdy5jb25maWcuZ2V0KCd3Z1BhZ2VOYW1lJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdW1tYXJ5OiBgQ3JlYXRlIHJlZGlyZWN0IG1hdGNoaW5nIG1haW4gcGFnZSwgdG8gW1ske2Rlc3RpbmF0aW9uVGFsa05hbWVzcGFjZU5hbWV9OiR7bWFpblRhcmdldFRleHR9XV0gKHZpYSBbW1VzZXI6RWVqaXQ0My9zY3JpcHRzL3N5bmMtcmVkaXJlY3R8c2NyaXB0XV0pYCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGAjUkVESVJFQ1QgW1ske2Rlc3RpbmF0aW9uVGFsa05hbWVzcGFjZU5hbWV9OiR7bWFpblRhcmdldFRleHR9XV0ke3BhZ2VNb3ZlID8gJ1xcblxcbnt7UmVkaXJlY3QgY2F0ZWdvcnkgc2hlbGx8XFxue3tSIGZyb20gbW92ZX19XFxufX0nIDogJyd9YCxcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyb3JDb2RlOiBzdHJpbmcsIGVycm9ySW5mbzogTWVkaWFXaWtpRGF0YUVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbXcubm90aWZ5KGBGYWlsZWQgdG8gcmVkaXJlY3QgcGFnZTogJHtlcnJvckluZm8/LmVycm9yLmluZm8gPz8gJ1Vua25vd24gZXJyb3InfSAoJHtlcnJvckNvZGV9KWAsIHsgdHlwZTogJ2Vycm9yJywgdGFnOiAnc3luYy1yZWRpcmVjdC1ub3RpZmljYXRpb24nIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgZWxzZSBtdy5ub3RpZnkoYEZhaWxlZCB0byByZWRpcmVjdCBwYWdlOiAke2Vycm9ySW5mbz8uZXJyb3IuaW5mbyA/PyAnVW5rbm93biBlcnJvcid9ICgke2Vycm9yQ29kZX0pYCwgeyB0eXBlOiAnZXJyb3InLCB0YWc6ICdzeW5jLXJlZGlyZWN0LW5vdGlmaWNhdGlvbicgfSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICBtdy5ub3RpZnkoJ1N1Y2Nlc3NmdWxseSByZWRpcmVjdGVkIHBhZ2UsIHJlbG9hZGluZy4uLicsIHsgdHlwZTogJ3N1Y2Nlc3MnLCB0YWc6ICdzeW5jLXJlZGlyZWN0LW5vdGlmaWNhdGlvbicgfSk7XG5cbiAgICAgICAgY29uc3QgbmV3VXJsID0gbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgICAgIG5ld1VybC5zZWFyY2hQYXJhbXMuc2V0KCdyZWRpcmVjdCcsICdubycpO1xuXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gbmV3VXJsLmhyZWY7XG4gICAgfSk7XG59KTtcbiJdLAogICJtYXBwaW5ncyI6ICI7OzthQUdBLEdBQUcsT0FBTyxNQUFNLENBQUMsZ0JBQWdCLEVBQUcsU0FBWSxDQUM1QyxHQUFJLENBQUMsR0FBRyxNQUFNLGdCQUFnQixHQUFHLE9BQU8sSUFBSSxtQkFBbUIsQ0FBQyxFQUFHLE9BQ25FLE1BQU1BLEVBQXlCLE1BQU0sSUFBSSxHQUFHLElBQUksRUFBRSxJQUFJLENBQ2xELE9BQVEsUUFDUixjQUFlLElBQ2YsS0FBTSxDQUFDLE9BQVEsV0FBVyxFQUMxQixPQUFRLFVBQ1IsUUFBUyxPQUNULE9BQVEsR0FBRyxHQUFHLE9BQU8sSUFBSSx1QkFBdUIsRUFBRSxHQUFHLE9BQU8sSUFBSSxtQkFBbUIsRUFBSSxDQUFDLENBQUMsSUFBSSxHQUFHLE9BQU8sSUFBSSxTQUFTLENBQUMsRUFDekgsQ0FBd0QsRUFDeEQsR0FBSSxDQUFDQSxFQUFzQixNQUFNLE1BQU0sQ0FBQyxFQUFFLFNBQVUsT0FFdkMsR0FBRyxLQUFLLGVBQWUsR0FBRyxPQUFPLElBQUksTUFBTSxJQUFNLFVBQVksT0FBUyxhQUFjLElBQUssK0JBQWdDLGVBQWUsRUFFaEosaUJBQWlCLFFBQVMsTUFBT0MsR0FBVSxDQUM1Q0EsRUFBTSxlQUFlLEVBRXJCLEdBQUcsT0FBTyxhQUFjLENBQUUsSUFBSyw0QkFBNkIsQ0FBQyxFQUU3RCxNQUFNQyxFQUEwQkYsRUFBc0IsTUFBTSxNQUFNLENBQUMsRUFBRSxVQUFVLENBQUMsRUFBRSxNQUFNLEtBQUssUUFFdkZHLEVBQWlCLDJCQUEyQixLQUFLRCxDQUFlLElBQUksQ0FBQyxFQUFFLFdBQVcsSUFBSyxHQUFHLEVBQUUsTUFBTSxHQUFHLEVBQUUsQ0FBQyxFQUFFLE1BQU0sR0FBRyxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQ25JLEdBQUksQ0FBQ0MsRUFBZ0IsT0FBTyxHQUFHLE9BQU8sbUNBQW9DLENBQUUsS0FBTSxRQUFTLElBQUssNEJBQTZCLENBQUMsRUFFOUgsTUFBTUMsRUFBdUIsSUFBSSxVQUFVLEVBQUUsZ0JBQWdCRCxFQUFnQixXQUFXLEVBQUUsZ0JBQWdCLFlBQzFHLEdBQUksQ0FBQ0MsRUFBc0IsT0FBTyxHQUFHLE9BQU8sbUNBQW9DLENBQUUsS0FBTSxRQUFTLElBQUssNEJBQTZCLENBQUMsRUFFcEksTUFBTUMsRUFBbUIsR0FBRyxNQUFNLFlBQVlELENBQW9CLEVBQ2xFLEdBQUksQ0FBQ0MsRUFBa0IsT0FBTyxHQUFHLE9BQU8sbUNBQW9DLENBQUUsS0FBTSxRQUFTLElBQUssNEJBQTZCLENBQUMsRUFFaEksTUFBTUMsRUFBaUJELEVBQWlCLFlBQVksRUFFOUNFLEVBQVcsNkRBQTZELEtBQUtMLENBQWUsRUFDNUZNLEVBQStCLEdBQUcsT0FBTyxJQUFJLHVCQUF1QixFQUFFSCxFQUFpQixlQUFlLEVBQUksQ0FBQyxFQUNqSCxNQUFNLElBQUksR0FBRyxJQUFJLEVBQ1osS0FBSyxHQUFHLE9BQU8sSUFBSSxZQUFZLEVBQUcsS0FBTyxDQUN0QyxLQUFNLGVBQWVHLENBQTRCLElBQUlGLENBQWMsS0FBS0MsRUFBVztBQUFBO0FBQUE7QUFBQTtBQUFBLElBQXdELEVBQUUsR0FDN0ksUUFBUyxzQ0FBc0NDLENBQTRCLElBQUlGLENBQWMseURBQzdGLE1BQU8sRUFDWCxFQUFFLEVBQ0QsTUFBTSxNQUFPRyxFQUFtQkMsSUFBa0MsQ0FDM0RELElBQWMsbUJBQ2QsTUFBTSxJQUFJLEdBQUcsSUFBSSxFQUNaLE9BQ0csR0FBRyxPQUFPLElBQUksWUFBWSxFQUMxQixDQUFFLFFBQVMsNENBQTRDRCxDQUE0QixJQUFJRixDQUFjLHdEQUF5RCxFQUM5SixlQUFlRSxDQUE0QixJQUFJRixDQUFjLEtBQUtDLEVBQVc7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQUF3RCxFQUFFLEVBQzNJLEVBQ0MsTUFBTSxDQUFDRSxFQUFtQkMsSUFBa0MsQ0FDekQsR0FBRyxPQUFPLDRCQUE0QkEsR0FBVyxNQUFNLE1BQVEsZUFBZSxLQUFLRCxDQUFTLElBQUssQ0FBRSxLQUFNLFFBQVMsSUFBSyw0QkFBNkIsQ0FBQyxDQUN6SixDQUFDLEVBQ0osR0FBRyxPQUFPLDRCQUE0QkMsR0FBVyxNQUFNLE1BQVEsZUFBZSxLQUFLRCxDQUFTLElBQUssQ0FBRSxLQUFNLFFBQVMsSUFBSyw0QkFBNkIsQ0FBQyxDQUM5SixDQUFDLEVBRUwsR0FBRyxPQUFPLDZDQUE4QyxDQUFFLEtBQU0sVUFBVyxJQUFLLDRCQUE2QixDQUFDLEVBRTlHLE1BQU1FLEVBQVMsSUFBSSxJQUFJLE9BQU8sU0FBUyxJQUFJLEVBQzNDQSxFQUFPLGFBQWEsSUFBSSxXQUFZLElBQUksRUFFeEMsT0FBTyxTQUFTLEtBQU9BLEVBQU8sSUFDbEMsQ0FBQyxDQUNMLENBQUMiLAogICJuYW1lcyI6IFsibWFpblBhZ2VJbmZvUmV2aXNpb25zIiwgImV2ZW50IiwgIm1haW5QYWdlQ29udGVudCIsICJyZWRpcmVjdFRhcmdldCIsICJyZWRpcmVjdFRhcmdldFBhcnNlZCIsICJtd1JlZGlyZWN0VGFyZ2V0IiwgIm1haW5UYXJnZXRUZXh0IiwgInBhZ2VNb3ZlIiwgImRlc3RpbmF0aW9uVGFsa05hbWVzcGFjZU5hbWUiLCAiZXJyb3JDb2RlIiwgImVycm9ySW5mbyIsICJuZXdVcmwiXQp9Cg==
